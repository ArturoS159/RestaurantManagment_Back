server:
  port: 8884
  application:
    name: order-service
  servlet:
    context-path: /order-api

logging:
  level:
    org.springframework: INFO
    org.apache.kafka: WARN

spring:
  kafka:
    properties:
      schema.reflection: true
      schema.registry.url: http://localhost:8081
    consumer:
      group-id: group
      isolation-level: read_committed
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
    producer:
      transaction-id-prefix: tx-
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
    bootstrap-servers: http://localhost:9092
  datasource:
    hikari:
      maxLifeTime: 600000
    initialization-mode: always
    schema: classpath:schema.sql
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://165.227.137.37:5432/orderDb?currentSchema=sorder
    username: postgres
    password: password


security:
  oauth2:
    resource:
      userInfoUri: http://localhost:8080/resource-api/me

springdoc:
  swagger-ui:
    enabled: false